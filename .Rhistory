ggsave('plot_Regions.png',REGION_CONTRIBUTION,dev="png",limitsize=TRUE, bg='transparent')
### PROVINCES ANALYSIS
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-province/dpc-covid19-ita-province.csv'
# LOAD DATA
summary_table <- read.csv(summary_file)
summary_table$data <- as.Date(summary_table$data)
summary_table$data <- as.Date(format(summary_table$data,format='%Y-%m-%d'))
today <- max(summary_table$data)
kept <- c("denominazione_provincia","totale_casi","data")
summary <- summary_table[,kept]
summary <- melt(summary, id=c("denominazione_provincia","data"))
colnames(summary) <- c("Provincia","Data","Categoria","Casi")
Today_TOT <- sum(summary[summary$Data == today,'Casi'])
collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
summary_others <- summary[summary$Provincia %in% collapse_these,]
summary_top <- summary[!(summary$Provincia %in% collapse_these),]
summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
summary_full <- rbind(summary_top,summary_others)
level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
scale_fill_brewer("",palette = "Paired") +
scale_y_continuous(position="right") + labs(x="",y="") +
ggtitle(paste("SARS-COV-2 in Italia, casi per provincia (agg.",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
geom_area()
ggsave('plot_Provinces.png',PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# for (myregion in unique(summary_table$denominazione_regione))
#
# {
#
#   summary = summary_table[summary_table$denominazione_regione == myregion,]
#
# kept <- c("denominazione_provincia","totale_casi","data")
# summary <- summary[,kept]
# summary <- melt(summary, id=c("denominazione_provincia","data"))
#
# colnames(summary) <- c("Provincia","Data","Categoria","Casi")
#
# Today_TOT <- sum(summary[summary$Data == today,'Casi'])
#
# print(Today_TOT)
#
# collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
# print(myregion)
# print(collapse_these)
#
# summary_others <- summary[summary$Provincia %in% collapse_these,]
# summary_top <- summary[!(summary$Provincia %in% collapse_these),]
#
# summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
# summary_full <- rbind(summary_top,summary_others)
#
# level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
#
# PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
#   scale_fill_brewer("",palette = "Paired") +
#   scale_y_continuous(position="right") + labs(x="",y="") +
#   ggtitle(paste("SARS-COV-2 in ", myregion," (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
#   scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
#   theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
#   geom_area()
#
# ggsave(paste("plot_",str_replace(myregion," ","_"),"_byProvince.png",sep=""), PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# }
# LOAD LIBRARIES
library(dplyr)
library(ggplot2)
library(reshape2)
library(forcats)
# INPUT FILE
summary_file <- summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv'
# LOAD DATA
summary <- read.csv(summary_file)
edit(summary)
# CLEAN DATA
summary$data <- as.Date(summary$data)
summary$data <- as.Date(format(summary$data,format='%Y-%m-%d'))
today <- max(summary$data)
kept <- c("denominazione_regione","ricoverati_con_sintomi","terapia_intensiva",
"isolamento_domiciliare","dimessi_guariti","deceduti","data")
summary <- summary[,kept]
summary <- melt(summary, id=c("denominazione_regione","data"))
colnames(summary) <- c("Regione","Data","Categoria","Casi")
levels(summary$Categoria) <- c("Ricoverati con sintomi","Terapia intensiva","Isolamento domiciliare","Dimessi guariti", "Deceduti")
colormap <- c("Ricoverati con sintomi" = "darkorange1",
"Terapia intensiva" = "firebrick2",
"Isolamento domiciliare" = "deepskyblue3",
"Dimessi guariti" = "#50C878",
"Deceduti" = "grey35")
ITALYPLOT <- ggplot(data=summary, mapping=aes(x=Data, y=Casi, fill=factor(Categoria, levels = c("Dimessi guariti","Isolamento domiciliare","Ricoverati con sintomi","Terapia intensiva","Deceduti")))) +
geom_bar(stat="identity") +
scale_fill_manual("", values = colormap) +
ggtitle(paste("SARS-COV-2 in Italia (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
scale_y_continuous(position="right") + labs(x="",y="") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank())
ggsave('plot_Italy.png',ITALYPLOT,dev="png",limitsize=TRUE, bg='transparent')
for (myregion in unique(summary$Regione))
{
if(myregion %in% c('Bolzano','Trento')) {
myregion_name = paste('nella Provincia Autonoma di ',myregion, sep="")} else if (myregion=="Marche") {
myregion_name = paste('nelle ',myregion,sep="")
} else {
myregion_name = paste('in ',myregion,sep="")
}
REGIONPLOT <- ggplot(data=summary[summary$Regione==myregion,], mapping=aes(x=Data, y=Casi, fill=factor(Categoria, levels = c("Dimessi guariti","Isolamento domiciliare","Ricoverati con sintomi","Terapia intensiva","Deceduti")))) +
geom_bar(stat="identity") +
scale_fill_manual("", values = colormap) +
ggtitle(paste("SARS-COV-2 ",myregion_name," (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
scale_y_continuous(position="right") + labs(x="",y="")
ggsave(paste("plot_",gsub(" ","_",myregion),".png",sep=""),REGIONPLOT,limitsize=TRUE, bg='transparent')
}
### REGION ANALYSIS
### REGION ANALYSIS
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv'
# LOAD DATA
summary <- read.csv(summary_file)
edit(summary)
summary$data <- as.Date(summary$data)
summary$data <- as.Date(format(summary$data,format='%Y-%m-%d'))
today <- max(summary$data)
kept <- c("denominazione_regione","totale_casi","data")
summary <- summary[,kept]
summary <- melt(summary, id=c("denominazione_regione","data"))
colnames(summary) <- c("Regione","Data","Categoria","Casi")
Today_TOT <- sum(summary[summary$Data == today,'Casi'])
collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Regione']
summary_others <- summary[summary$Regione %in% collapse_these,]
summary_top <- summary[!(summary$Regione %in% collapse_these),]
summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Regione="Altre") %>% mutate(Categoria="totale_casi")
summary_full <- rbind(summary_top,summary_others)
level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Regione!="Altre"),'Regione']),summary_full[(summary_full$Data==today)&(summary_full$Regione!="Altre"),'Casi'],.desc=TRUE),"Altre")
REGION_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Regione,levels=levels(level_order)))) +
scale_fill_brewer("",palette = "Set1") +
scale_y_continuous(position="right") + labs(x="",y="") +
ggtitle(paste("SARS-COV-2 in Italia, casi per regione (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
geom_area()
ggsave('plot_Regions.png',REGION_CONTRIBUTION,dev="png",limitsize=TRUE, bg='transparent')
### PROVINCES ANALYSIS
# INPUT FILE
summary_file <- 'https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-province/dpc-covid19-ita-province.csv'
# LOAD DATA
summary_table <- read.csv(summary_file)
edit(summary_table)
summary_table$data <- as.Date(summary_table$data)
summary_table$data <- as.Date(format(summary_table$data,format='%Y-%m-%d'))
today <- max(summary_table$data)
kept <- c("denominazione_provincia","totale_casi","data")
summary <- summary_table[,kept]
summary <- melt(summary, id=c("denominazione_provincia","data"))
colnames(summary) <- c("Provincia","Data","Categoria","Casi")
Today_TOT <- sum(summary[summary$Data == today,'Casi'])
collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
summary_others <- summary[summary$Provincia %in% collapse_these,]
summary_top <- summary[!(summary$Provincia %in% collapse_these),]
summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
summary_full <- rbind(summary_top,summary_others)
level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
scale_fill_brewer("",palette = "Paired") +
scale_y_continuous(position="right") + labs(x="",y="") +
ggtitle(paste("SARS-COV-2 in Italia, casi per provincia (agg.",format(today,"%d/%m/%y"),")",sep="")) +
scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
geom_area()
ggsave('plot_Provinces.png',PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# for (myregion in unique(summary_table$denominazione_regione))
#
# {
#
#   summary = summary_table[summary_table$denominazione_regione == myregion,]
#
# kept <- c("denominazione_provincia","totale_casi","data")
# summary <- summary[,kept]
# summary <- melt(summary, id=c("denominazione_provincia","data"))
#
# colnames(summary) <- c("Provincia","Data","Categoria","Casi")
#
# Today_TOT <- sum(summary[summary$Data == today,'Casi'])
#
# print(Today_TOT)
#
# collapse_these <- summary[(summary$Data == today)&(summary$Casi<=Today_TOT/20),'Provincia']
# print(myregion)
# print(collapse_these)
#
# summary_others <- summary[summary$Provincia %in% collapse_these,]
# summary_top <- summary[!(summary$Provincia %in% collapse_these),]
#
# summary_others <- summary_others[,c('Data','Casi')] %>% group_by(Data) %>% summarise_all(funs(sum)) %>% mutate(Provincia="Altre") %>% mutate(Categoria="totale_casi")
# summary_full <- rbind(summary_top,summary_others)
#
# level_order <- fct_expand(fct_reorder(factor(summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Provincia']),summary_full[(summary_full$Data==today)&(summary_full$Provincia!="Altre"),'Casi'],.desc=TRUE),"Altre")
#
# PROVINCE_CONTRIBUTION <- ggplot(summary_full, aes(x=Data, y=Casi, fill=factor(Provincia,levels=levels(level_order)))) +
#   scale_fill_brewer("",palette = "Paired") +
#   scale_y_continuous(position="right") + labs(x="",y="") +
#   ggtitle(paste("SARS-COV-2 in ", myregion," (agg. ",format(today,"%d/%m/%y"),")",sep="")) +
#   scale_x_date(date_labels="%d/%m", date_breaks="2 days") +
#   theme(legend.position="bottom", legend.background = element_rect(color = NA), panel.grid.minor = element_blank()) +
#   geom_area()
#
# ggsave(paste("plot_",str_replace(myregion," ","_"),"_byProvince.png",sep=""), PROVINCE_CONTRIBUTION,dev="png", bg='transparent')
#
# }
filename <- 'C:/Users/asus/Downloads/dati-comunali-giornalieri-1/comune_giorno.csv'
df <- read.csv(filename,sep=",")
head(df)
head(df[df$NOME_COMUNE=="BERGAMO",])
head(df[df$NOME_COMUNE=="Bergamo",])
bergamo_df <- df[df$NOME_COMUNE=="Bergamo",]
df <- read.csv(filename,sep=",",colClasses=c(rep("character",8),rep("numeric",18)))
head(df)
df$GE <- as.Date(df$GE,"%m%d")
df$GE
head(df)
library(dplyr)
?pivot_longer
library(dplyr)
library(reshape2)
# IMPOSTO CARTELLA DI LAVORO
setwd("~/GIT_folder/coronavirus_lombardia")
# CARICO LIBRERIE
library(dplyr)
library(ggplot2)
library(reshape2)
library(forcats)
library(showtext)
library(gridExtra)
library(grid)
library(htmltools)
library(webshot)
library(formattable)
library(zoo)
# FUNZIONE PER LA STAMPA DI OGGETTI FORMATTABLE
export_formattable <- function(f, file, width = "80%", height = NULL,
background = "white", delay = 0.2)
{w <- as.htmlwidget(f, width = width, height = height)
path <- html_print(w, background = background, viewer = NULL)
url <- paste0("file:///", gsub("\\\\", "/", normalizePath(path)))
webshot(url,
file = file,
selector = ".formattable_widget",
delay = delay)}
# CARICO FONT "ROBOTO"
font_add(family='Roboto', regular='C:/Users/asus/Downloads/Roboto/Roboto-Light.ttf')
# IMPOSTO DATE DA CONFRONTARE
yesterday_DATE <- '2020-04-02'
today_DATE <- '2020-04-03'
# IMPOSTO DATA AGGIORNAMENTO - PER IL TITOLO DEI GRAFICI
update_DATE <- as.Date(today_DATE,"%Y-%m-%d")
# FILE CSV DAL REPOSITORY ONDATA
yesterday_file <- paste('https://github.com/ondata/covid19italia/raw/master/webservices/regioneLombardia/processing/INCR_DATE_PRV_TAMP_RL_v2/',yesterday_DATE,'-INCR_DATE_PRV_TAMP_RL_v2.csv',sep='')
today_file <- paste('https://github.com/ondata/covid19italia/raw/master/webservices/regioneLombardia/processing/INCR_DATE_PRV_TAMP_RL_v2/',today_DATE,'-INCR_DATE_PRV_TAMP_RL_v2.csv',sep='')
# CARICO I FILE CSV
yesterday <- read.csv(yesterday_file)
today <- read.csv(today_file)
# IMPOSTO VARIABILI IN FORMATO DATA
yesterday$DATA_RICEVIMENTO_TAMPONE <- as.Date(as.character(yesterday$DATA_RICEVIMENTO_TAMPONE),"%Y%m%d")
today$DATA_RICEVIMENTO_TAMPONE <- as.Date(as.character(today$DATA_RICEVIMENTO_TAMPONE),"%Y%m%d")
# DATE DEGLI ULTIMI INSERIMENTI
today_date <- max(today$DATA_RICEVIMENTO_TAMPONE)
yesterday_date <- max(yesterday$DATA_RICEVIMENTO_TAMPONE)
# UNISCO I DUE DATAFRAME
df <- merge(today,yesterday,by=c('PROVINCIA','DATA_RICEVIMENTO_TAMPONE'),all=TRUE)
mov_avg <- data.frame(PROVINCIA=character(),DATA_RICEVIMENTO_TAMPONE=character(),AVERAGE=numeric())
top <- c('BERGAMO','BRESCIA','MILANO','CREMONA','MONZA E DELLA BRIANZA')
others <- c('MANTOVA','PAVIA','LECCO','COMO','SONDRIO','VARESE','LODI')
varese <- c('VARESE')
for (myPROV in unique(df$PROVINCIA)) {
if (myPROV %in% varese) {
prov_df <- df[(df$PROVINCIA==myPROV)&(df$DATA_RICEVIMENTO_TAMPONE<(today_date-1)),]
prov_df <- prov_df %>% mutate(AVERAGE = rollmean(NUM_TAMP.x,k=15,fill=NA))
prov_df <- prov_df[,c("PROVINCIA","DATA_RICEVIMENTO_TAMPONE","AVERAGE")]
mov_avg <- rbind(mov_avg,prov_df)
}
}
#plot_title <- paste("COVID-19 in provincia di ",myPROV," (media mobile di 7 giorni)",sep="")
#plot_title <- paste("Nuovi casi, province con più casi (media mobile di 15 giorni)",sep="")
plot_tile <- "Nuovi casi in provincia di Varese"
# ATTIVO SHOWTEXT
showtext_auto()
x11()
J <- ggplot(data=mov_avg,aes(x=DATA_RICEVIMENTO_TAMPONE,y=NUM_TAMP.x,group=PROVINCIA)) +
geom_line(size=1,aes(color=factor(PROVINCIA))) + geom_point(size=2,aes(color=factor(PROVINCIA))) +
scale_x_date(date_labels="%d/%m") +
scale_y_continuous(position="right") +
scale_color_brewer("",palette = "Paired") +
ggtitle(plot_title) +
labs(x="",y="") +
theme_classic() +
theme(legend.title = element_blank(),
legend.position="bottom",
legend.background = element_rect(color = NA),
panel.grid.major = element_line(colour = 'grey',size=0.3),
panel.grid.minor = element_blank(),
panel.grid.major.x=element_blank(),
plot.margin=unit(c(1,0,1,0.5),"cm"),
axis.title=element_text(size=45,family="Roboto",margin = unit(c(3, 0, 0, 0), "cm")),
legend.text=element_text(size=45,family='Roboto'),
plot.title = element_text(size=60,family='Roboto'),
axis.text.x = element_text(size=40,family='Roboto'),
axis.text.y = element_text(size=40,family='Roboto'))
ggsave(paste('img/mediamobile_varese.png',sep=""),J,dev="png", width = 11, height = 8, units='in', bg='transparent')
# ANALIZZO TUTTE LE PROVINCE UNA ALLA VOLTA
mov_avg <- data.frame(PROVINCIA=character(),DATA_RICEVIMENTO_TAMPONE=character(),AVERAGE=numeric())
top <- c('BERGAMO','BRESCIA','MILANO','CREMONA','MONZA E DELLA BRIANZA')
others <- c('MANTOVA','PAVIA','LECCO','COMO','SONDRIO','VARESE','LODI')
varese <- c('VARESE')
for (myPROV in unique(df$PROVINCIA)) {
if (myPROV %in% varese) {
prov_df <- df[(df$PROVINCIA==myPROV)&(df$DATA_RICEVIMENTO_TAMPONE<(today_date-1)),]
prov_df <- prov_df %>% mutate(AVERAGE = rollmean(NUM_TAMP.x,k=15,fill=NA))
prov_df <- prov_df[,c("PROVINCIA","DATA_RICEVIMENTO_TAMPONE","AVERAGE")]
mov_avg <- rbind(mov_avg,prov_df)
}
}
#plot_title <- paste("COVID-19 in provincia di ",myPROV," (media mobile di 7 giorni)",sep="")
#plot_title <- paste("Nuovi casi, province con più casi (media mobile di 15 giorni)",sep="")
plot_title <- "Nuovi casi in provincia di Varese"
# ATTIVO SHOWTEXT
showtext_auto()
x11()
J <- ggplot(data=mov_avg,aes(x=DATA_RICEVIMENTO_TAMPONE,y=NUM_TAMP.x,group=PROVINCIA)) +
geom_line(size=1,aes(color=factor(PROVINCIA))) + geom_point(size=2,aes(color=factor(PROVINCIA))) +
scale_x_date(date_labels="%d/%m") +
scale_y_continuous(position="right") +
scale_color_brewer("",palette = "Paired") +
ggtitle(plot_title) +
labs(x="",y="") +
theme_classic() +
theme(legend.title = element_blank(),
legend.position="bottom",
legend.background = element_rect(color = NA),
panel.grid.major = element_line(colour = 'grey',size=0.3),
panel.grid.minor = element_blank(),
panel.grid.major.x=element_blank(),
plot.margin=unit(c(1,0,1,0.5),"cm"),
axis.title=element_text(size=45,family="Roboto",margin = unit(c(3, 0, 0, 0), "cm")),
legend.text=element_text(size=45,family='Roboto'),
plot.title = element_text(size=60,family='Roboto'),
axis.text.x = element_text(size=40,family='Roboto'),
axis.text.y = element_text(size=40,family='Roboto'))
ggsave(paste('img/mediamobile_varese.png',sep=""),J,dev="png", width = 11, height = 8, units='in', bg='transparent')
mov_avg <- data.frame(PROVINCIA=character(),DATA_RICEVIMENTO_TAMPONE=character(),NUM_TAMP.x=numeric(),AVERAGE=numeric())
top <- c('BERGAMO','BRESCIA','MILANO','CREMONA','MONZA E DELLA BRIANZA')
others <- c('MANTOVA','PAVIA','LECCO','COMO','SONDRIO','VARESE','LODI')
varese <- c('VARESE')
for (myPROV in unique(df$PROVINCIA)) {
if (myPROV %in% varese) {
prov_df <- df[(df$PROVINCIA==myPROV)&(df$DATA_RICEVIMENTO_TAMPONE<(today_date-1)),]
prov_df <- prov_df %>% mutate(AVERAGE = rollmean(NUM_TAMP.x,k=15,fill=NA))
prov_df <- prov_df[,c("PROVINCIA","DATA_RICEVIMENTO_TAMPONE","NUM_TAMP.x","AVERAGE")]
mov_avg <- rbind(mov_avg,prov_df)
}
}
#plot_title <- paste("COVID-19 in provincia di ",myPROV," (media mobile di 7 giorni)",sep="")
#plot_title <- paste("Nuovi casi, province con più casi (media mobile di 15 giorni)",sep="")
plot_title <- "Nuovi casi in provincia di Varese"
# ATTIVO SHOWTEXT
showtext_auto()
x11()
J <- ggplot(data=df,aes(x=DATA_RICEVIMENTO_TAMPONE,y=NUM_TAMP.x,group=PROVINCIA)) +
geom_line(size=1,aes(color=factor(PROVINCIA))) + geom_point(size=2,aes(color=factor(PROVINCIA))) +
scale_x_date(date_labels="%d/%m") +
scale_y_continuous(position="right") +
scale_color_brewer("",palette = "Paired") +
ggtitle(plot_title) +
labs(x="",y="") +
theme_classic() +
theme(legend.title = element_blank(),
legend.position="bottom",
legend.background = element_rect(color = NA),
panel.grid.major = element_line(colour = 'grey',size=0.3),
panel.grid.minor = element_blank(),
panel.grid.major.x=element_blank(),
plot.margin=unit(c(1,0,1,0.5),"cm"),
axis.title=element_text(size=45,family="Roboto",margin = unit(c(3, 0, 0, 0), "cm")),
legend.text=element_text(size=45,family='Roboto'),
plot.title = element_text(size=60,family='Roboto'),
axis.text.x = element_text(size=40,family='Roboto'),
axis.text.y = element_text(size=40,family='Roboto'))
ggsave(paste('img/mediamobile_varese.png',sep=""),J,dev="png", width = 11, height = 8, units='in', bg='transparent')
mov_avg <- data.frame(PROVINCIA=character(),DATA_RICEVIMENTO_TAMPONE=character(),NUM_TAMP.x=numeric(),AVERAGE=numeric())
top <- c('BERGAMO','BRESCIA','MILANO','CREMONA','MONZA E DELLA BRIANZA')
others <- c('MANTOVA','PAVIA','LECCO','COMO','SONDRIO','VARESE','LODI')
varese <- c('VARESE')
for (myPROV in unique(df$PROVINCIA)) {
if (myPROV %in% varese) {
prov_df <- df[(df$PROVINCIA==myPROV)&(df$DATA_RICEVIMENTO_TAMPONE<(today_date-1)),]
prov_df <- prov_df %>% mutate(AVERAGE = rollmean(NUM_TAMP.x,k=15,fill=NA))
prov_df <- prov_df[,c("PROVINCIA","DATA_RICEVIMENTO_TAMPONE","NUM_TAMP.x","AVERAGE")]
mov_avg <- rbind(mov_avg,prov_df)
}
}
#plot_title <- paste("COVID-19 in provincia di ",myPROV," (media mobile di 7 giorni)",sep="")
#plot_title <- paste("Nuovi casi, province con più casi (media mobile di 15 giorni)",sep="")
plot_title <- "Nuovi casi in provincia di Varese"
# ATTIVO SHOWTEXT
showtext_auto()
x11()
J <- ggplot(data=mov_avg,aes(x=DATA_RICEVIMENTO_TAMPONE,y=NUM_TAMP.x,group=PROVINCIA)) +
geom_line(size=1,aes(color=factor(PROVINCIA))) + geom_point(size=2,aes(color=factor(PROVINCIA))) +
scale_x_date(date_labels="%d/%m") +
scale_y_continuous(position="right") +
scale_color_brewer("",palette = "Paired") +
ggtitle(plot_title) +
labs(x="",y="") +
theme_classic() +
theme(legend.title = element_blank(),
legend.position="bottom",
legend.background = element_rect(color = NA),
panel.grid.major = element_line(colour = 'grey',size=0.3),
panel.grid.minor = element_blank(),
panel.grid.major.x=element_blank(),
plot.margin=unit(c(1,0,1,0.5),"cm"),
axis.title=element_text(size=45,family="Roboto",margin = unit(c(3, 0, 0, 0), "cm")),
legend.text=element_text(size=45,family='Roboto'),
plot.title = element_text(size=60,family='Roboto'),
axis.text.x = element_text(size=40,family='Roboto'),
axis.text.y = element_text(size=40,family='Roboto'))
ggsave(paste('img/mediamobile_varese.png',sep=""),J,dev="png", width = 11, height = 8, units='in', bg='transparent')
mov_avg <- data.frame(PROVINCIA=character(),DATA_RICEVIMENTO_TAMPONE=character(),NUM_TAMP.x=numeric(),AVERAGE=numeric())
top <- c('BERGAMO','BRESCIA','MILANO','CREMONA','MONZA E DELLA BRIANZA')
others <- c('MANTOVA','PAVIA','LECCO','COMO','SONDRIO','VARESE','LODI')
varese <- c('VARESE')
for (myPROV in unique(df$PROVINCIA)) {
if (myPROV %in% varese) {
#prov_df <- df[(df$PROVINCIA==myPROV)&(df$DATA_RICEVIMENTO_TAMPONE<(today_date-1)),]
prov_df <- df[df$PROVINCIA==myPROV,]
prov_df <- prov_df %>% mutate(AVERAGE = rollmean(NUM_TAMP.x,k=15,fill=NA))
prov_df <- prov_df[,c("PROVINCIA","DATA_RICEVIMENTO_TAMPONE","NUM_TAMP.x","AVERAGE")]
mov_avg <- rbind(mov_avg,prov_df)
}
}
#plot_title <- paste("COVID-19 in provincia di ",myPROV," (media mobile di 7 giorni)",sep="")
#plot_title <- paste("Nuovi casi, province con più casi (media mobile di 15 giorni)",sep="")
plot_title <- "Nuovi casi in provincia di Varese"
# ATTIVO SHOWTEXT
showtext_auto()
x11()
J <- ggplot(data=mov_avg,aes(x=DATA_RICEVIMENTO_TAMPONE,y=NUM_TAMP.x,group=PROVINCIA)) +
geom_line(size=1,aes(color=factor(PROVINCIA))) + geom_point(size=2,aes(color=factor(PROVINCIA))) +
scale_x_date(date_labels="%d/%m") +
scale_y_continuous(position="right") +
scale_color_brewer("",palette = "Paired") +
ggtitle(plot_title) +
labs(x="",y="") +
theme_classic() +
theme(legend.title = element_blank(),
legend.position="bottom",
legend.background = element_rect(color = NA),
panel.grid.major = element_line(colour = 'grey',size=0.3),
panel.grid.minor = element_blank(),
panel.grid.major.x=element_blank(),
plot.margin=unit(c(1,0,1,0.5),"cm"),
axis.title=element_text(size=45,family="Roboto",margin = unit(c(3, 0, 0, 0), "cm")),
legend.text=element_text(size=45,family='Roboto'),
plot.title = element_text(size=60,family='Roboto'),
axis.text.x = element_text(size=40,family='Roboto'),
axis.text.y = element_text(size=40,family='Roboto'))
ggsave(paste('img/dailycases_varese.png',sep=""),J,dev="png", width = 11, height = 8, units='in', bg='transparent')
mov_avg <- data.frame(PROVINCIA=character(),DATA_RICEVIMENTO_TAMPONE=character(),NUM_TAMP.x=numeric(),AVERAGE=numeric())
top <- c('BERGAMO','BRESCIA','MILANO','CREMONA','MONZA E DELLA BRIANZA')
others <- c('MANTOVA','PAVIA','LECCO','COMO','SONDRIO','VARESE','LODI')
varese <- c('VARESE')
for (myPROV in unique(df$PROVINCIA)) {
if (myPROV %in% varese) {
#prov_df <- df[(df$PROVINCIA==myPROV)&(df$DATA_RICEVIMENTO_TAMPONE<(today_date-1)),]
prov_df <- df[df$PROVINCIA==myPROV,]
prov_df <- prov_df %>% mutate(AVERAGE = rollmean(NUM_TAMP.x,k=15,fill=NA))
prov_df <- prov_df[,c("PROVINCIA","DATA_RICEVIMENTO_TAMPONE","NUM_TAMP.x","AVERAGE")]
mov_avg <- rbind(mov_avg,prov_df)
}
}
#plot_title <- paste("COVID-19 in provincia di ",myPROV," (media mobile di 7 giorni)",sep="")
#plot_title <- paste("Nuovi casi, province con più casi (media mobile di 15 giorni)",sep="")
plot_title <- "Nuovi casi in provincia di Varese"
# ATTIVO SHOWTEXT
showtext_auto()
x11()
J <- ggplot(data=mov_avg,aes(x=DATA_RICEVIMENTO_TAMPONE,y=NUM_TAMP.x,group=PROVINCIA)) +
geom_line(size=1,aes(color=factor(PROVINCIA))) + geom_point(size=2,aes(color=factor(PROVINCIA))) +
scale_x_date(date_labels="%d/%m", date_breaks="3 days") +
scale_y_continuous(position="right") +
scale_color_brewer("",palette = "Paired") +
ggtitle(plot_title) +
labs(x="",y="") +
theme_classic() +
theme(legend.title = element_blank(),
legend.position="bottom",
legend.background = element_rect(color = NA),
panel.grid.major = element_line(colour = 'grey',size=0.3),
panel.grid.minor = element_blank(),
panel.grid.major.x=element_blank(),
plot.margin=unit(c(1,0,1,0.5),"cm"),
axis.title=element_text(size=45,family="Roboto",margin = unit(c(3, 0, 0, 0), "cm")),
legend.text=element_text(size=45,family='Roboto'),
plot.title = element_text(size=60,family='Roboto'),
axis.text.x = element_text(size=40,family='Roboto'),
axis.text.y = element_text(size=40,family='Roboto'))
ggsave(paste('img/dailycases_varese.png',sep=""),J,dev="png", width = 11, height = 8, units='in', bg='transparent')
